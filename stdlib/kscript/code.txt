# 자료형과 할당
a = None
test.print(a)
a = True
test.print(a)
a = False
test.print(a)
a = 0
test.print(a)
a = 0.0
test.print(a)
a = ""
test.print(a)
a = ''
test.print(a)
test.print("#n")

# 함수와 스택
def fib(n) {
    if (n <= 2) {
        return 1
    } else {
        return fib(n - 1) + fib(n - 2)
    }
} # 피보나치 함수

def tst() {
    a = "local set"
    b = a + "_B"

    # 외부 함수
    c = test.read("kasm.txt", -1)
    test.write("kasm2.txt", c)
    t()
} # 시험 함수

def t() {
    t = test.time()
    if (t % 1 < 0.3) {
        test.print("0.0 ~ 0.3#n")
    } else {
        if (t % 1 < 0.6) {
            test.print("0.3 ~ 0.6#n")
        } else {
            test.print("0.6 ~ 1.0#n")
        }
    }
}

a = 0
test.print(a)
tst()
test.print(a + "#n")

for (i, r <- -10) {
    i = i + 1
    test.print("fib ")
    test.print(i)
    test.print(" = ")
    test.print(fib(1 - r))
    test.print("#n")
}

# 구조문
m = 2
while (m < 5) {
    n = 2
    while (n < 5) {
        test.print(m)
        test.print("#s*#s")
        test.print(n)
        test.print("#s=#s")
        test.print(n * m)
        test.print("#n")
        n = n + 1
    }
    m = m + 1
}

for (i, r <- "안녕하세요") {
    i = i + 1
    r = r * 2
    test.print(r)
    for (j, l <- i) {
        test.print(j + l)
    }
}
test.print("#n")

# 연산
a = True
b = False
c = 24
d = 6.0
e = "Hello안녕"
f = '1020'

test.print(a + b)
test.print(c + 1)
test.print(d + c)
test.print(f + '3040')
test.print("#n")

test.print(d - c)
test.print(c - 1)
test.print(c - 23)
test.print(d - -3)
test.print("#n")

test.print(b * a)
test.print(2 * c)
test.print(d * 2)
test.print(3 * e)
test.print("#n")

test.print(c / 2)
test.print(c / 4)
test.print(d / 2)
test.print(d / -1.5)
test.print("#n")

test.print(c // 5)
test.print(d // -3)
test.print(c % 5)
test.print(d % -3)
test.print(c ** 0.5)
test.print(d ** -1)
test.print("#n")

# 비교
test.print(a == b)
test.print(a == c)
test.print(e != f)
test.print(f != '1020')
test.print("#n")

test.print(c < -3.5)
test.print(d <= 6.0)
test.print(c > 24)
test.print(d >= 6)
test.print("#n")

# 연산 우선순위
test.print(2 * -1.5 + 16 / 2 ** 2 - -4)
test.print(1024 // 2 ** 2 ** 3 % 7)
test.print(1 + 1 + 1 == 3 != True)
test.print("#n")

# sleep
test.sleep(1)
test.sleep(1.5)