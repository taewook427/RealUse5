gen5 Kbin [win & linux]
간단한 이진 파일 뷰어입니다.
윈도우용은 실행파일 2개로 구성되어 있으며 리눅스용은 단일 실행파일입니다.

실행 시 인자로 파일 경로를 주었다면 그 파일이 열립니다.
주지 않았다면 cliget으로 열 파일을 선택합니다.
파일의 바이너리 데이터를 볼 수 있는 헥스 뷰어입니다.
UI는 3부분으로 구성됩니다.

왼쪽은 읽기 오프셋을 나타냅니다.
한 번에 512바이트를 16 x 32로 보여주기에,
왼쪽 가장 위 오프셋은 1KiB 단위로 읽기 위치를 보여줍니다.
A/B로 1KiB의 앞/뒤 부분을 표시합니다.
예를 들어 0032B 오프셋은 32 * 1024 + 512 = 33280부터 다음 512바이트를 보여줍니다.
하단 줄은 각 바이트의 오프셋에서의 상대 위치를 나타냅니다.
총 512바이트가 표시되기에, 위치 값은 0부터 511까지 512개입니다.

가운데는 실제 데이터 값을 16진법으로 표시합니다.
오프셋으로부터 512바이트를 읽을 수 있으면 전체가 표시되고,
파일의 끝 부분이라 512바이트보다 적은 양만 표시할 때는 뒷부분이 비어보이게 표시됩니다.

오른쪽은 ascii코드로 변환한 바이너리 값입니다.
ascii영역 안쪽 값은 영문 알파벳으로 잘 표현되지만, 그 범위를 넘어서는 값은 "."으로 표시됩니다.
왼쪽과 가운데의 오프셋은 모두 10진수로 표시되지만, 오른쪽의 오프셋 표시는 16진수로 표시됩니다.

명령어를 입력해서 프로그램을 제어합니다.
x : 프로그램을 종료합니다.
p : 이전 페이지로 이동합니다. 즉, 이전 512바이트를 보여줍니다.
n : 다음 페이지로 이동합니다. p/n은 파일의 처음/끝 청크에서는 동작하지 않습니다.
open : 윈도우는 동봉된 HxD, 리눅스는 OS의 헥스 에디터로 파일을 엽니다.
tp N : N이 왼쪽 위 오프셋에 해당하는 값입니다. 예를들어 tp 3 이면 3036~3584 바이트가 표시됩니다.
N은 정수만 올 수 있기에 이동은 1024바이트 단위로만 가능합니다. N이 너무 크다면 파일의 마지막 청크로 이동합니다.
str N.N N.N : 주소 2개를 받아 그 사이를 슬라이싱한 후 UTF-8로 디코딩한 문자열을 출력합니다.
16384바이트보다 작은 길이의 바이트 슬라이스만 선택 가능합니다.
주소는 "{상대 오프셋}.{내부 위치}"꼴입니다.
상대 오프셋은 현재 페이지를 기준으로 얼마나 전/후 페이지인지를 말합니다.
현재 페이지는 0, 이전 페이지는 -1, 다음 페이지는 1... 과 같이 사용합니다.
내부 위치는 0~511로 표시되는 페이지 안의 위치입니다. 0~511을 벗어나는 값은 0또는 511로 들어갑니다.
예를 들어 현재 오프셋이 0010B라면,
1024 * 10 + 512부터 512바이트, 즉 10752~11264바이트가 현재 페이지에 표시될 것입니다.
이때 str -1.256 0.36을 입력하면 [10752 - 512 + 256, 10752 + 36) ( =[10496, 10788) )
범위의 바이트 슬라이스를 문자열로 바꿔 출력합니다.
